{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-way-of-samurai\\\\react-way-of-samurai\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize\n      } = this.props;\n      this.props.getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers: requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["C:/react-way-of-samurai/react-way-of-samurai/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","unfollow","toggleFollowingProgress","requestUsers","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,QAHJ,EAGcC,uBAHd,EAGuCC,YAHvC,QAIO,2BAJP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,kBALJ,EAKwBC,QALxB,QAMO,6BANP;;AASA,MAAMC,cAAN,SAA6BhB,KAAK,CAACiB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMxBC,UAAD,IAAgB;AAC5B,YAAM;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAxB;AACA,WAAKA,KAAL,CAAWN,QAAX,CAAoBI,UAApB,EAAgCC,QAAhC;AACH,KATwC;AAAA;;AACzCE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcH,MAAAA;AAAd,QAA0B,KAAKC,KAArC;AACA,SAAKA,KAAL,CAAWN,QAAX,CAAoBQ,WAApB,EAAiCH,QAAjC;AACH;;AAODI,EAAAA,MAAM,GAAG;AAEL,wBAAO,0CACF,KAAKH,KAAL,CAAWI,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IADrC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eAAnC;AACO,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QAD5B;AAEO,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,WAF/B;AAGO,MAAA,aAAa,EAAE,KAAKL,aAH3B;AAIO,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWM,KAJzB;AAKO,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWnB,MAL1B;AAMO,MAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWjB,QAN5B;AAOO,MAAA,mBAAmB,EAAE,KAAKiB,KAAL,CAAWO,mBAPvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAYH;;AAzBwC;;AA4B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEZ,QAAQ,CAACe,KAAD,CADZ;AAEHV,IAAAA,QAAQ,EAAEP,WAAW,CAACiB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEZ,kBAAkB,CAACgB,KAAD,CAHhC;AAIHP,IAAAA,WAAW,EAAEb,cAAc,CAACoB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEb,aAAa,CAACkB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAEjB,sBAAsB,CAACmB,KAAD;AANxC,GAAP;AAQH,CATD;;AAYA,eAAerB,OAAO,CAClBR,OAAO,CAAC4B,eAAD,EAAkB;AAAC3B,EAAAA,MAAD;AAASE,EAAAA,QAAT;AAAmBD,EAAAA,cAAnB;AAAmCE,EAAAA,uBAAnC;AAA4DU,EAAAA,QAAQ,EAAET;AAAtE,CAAlB,CADW,CAAP,CAEbU,cAFa,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)"]},"metadata":{},"sourceType":"module"}