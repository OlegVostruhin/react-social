{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-social\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.jsx\";\nimport React, { useState } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile\n}) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const onMainPhotoSelected = e => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = formData => {\n    saveProfile(formData);\n    setEditMode(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.descriptionBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profile.photos.large || userPhoto,\n    className: s.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), isOwner && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onMainPhotoSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }), editMode ? /*#__PURE__*/React.createElement(ProfileDataForm, {\n    initialValues: profile,\n    profile: profile,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(ProfileData, {\n    profile: profile,\n    isOwner: isOwner,\n    goToEditMode: () => setEditMode(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(ProfileStatusWithHooks, {\n    status: status,\n    updateStatus: updateStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst ProfileData = ({\n  profile,\n  isOwner,\n  goToEditMode\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, isOwner && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: goToEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Fullname\"), \": \", profile.fullName), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Looking for a job\"), \": \", profile.lookingForAJob ? \"yes\" : \"nope\"), profile.lookingForAJob && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"My proffesional skills\"), \": \", profile.lookingForAJobDescription), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"About me\"), \" \", profile.aboutMe), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Contacts\"), \": \", Object.keys(profile.contacts).map(key => {\n    return /*#__PURE__*/React.createElement(Contact, {\n      contactTitle: key,\n      contactValue: profile.contacts[key],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }\n    });\n  })));\n};\n\nconst Contact = ({\n  contactTitle,\n  contactValue\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 39\n    }\n  }, contactTitle), \": \", contactValue);\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["C:/react-social/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","useState","s","Preloader","ProfileStatusWithHooks","userPhoto","ProfileDataForm","ProfileInfo","profile","status","updateStatus","isOwner","savePhoto","saveProfile","editMode","setEditMode","onMainPhotoSelected","e","target","files","length","onSubmit","formData","descriptionBlock","photos","large","avatar","ProfileData","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","contact"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit =(formData) => {\r\n       saveProfile(formData)\r\n        setEditMode(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.avatar} />\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Fullname</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"nope\"}\r\n        </div>\r\n        {\r\n            profile.lookingForAJob &&\r\n            <div>\r\n                <b>My proffesional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}