{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(p => p.id != action.postId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/react-social/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","addPostActionCreator","setUserProfile","setStatus","deletePost","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}