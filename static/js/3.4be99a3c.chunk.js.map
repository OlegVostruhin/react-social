{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","avatar","contact","postsBlock","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","s","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","toConsumableArray","reverse","p","MyPosts_Post_Post","id","createRef","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,iBAAA,sCAAAC,OAAA,4BAAAC,QAAA,mDCAlBJ,EAAAC,QAAA,CAAkBI,WAAA,4BAAAC,MAAA,6CCAlBN,EAAAC,QAAA,CAAkBM,KAAA,mJC0CHC,EAvCgB,SAACC,GAAU,IAAAC,EACRC,oBAAS,GADDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjCK,EADiCH,EAAA,GACvBI,EADuBJ,EAAA,GAAAK,EAEZN,mBAASF,EAAMS,QAFHC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEjCC,EAFiCC,EAAA,GAEzBC,EAFyBD,EAAA,GAItCE,oBAAW,WACPD,EAAUX,EAAMS,SACjB,CAACT,EAAMS,SAeV,OACII,EAAAC,EAAAC,cAAA,YACOT,GACHO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBAAcF,EAAAC,EAAAC,cAAA,QAAMC,cAjBP,WACrBT,GAAY,KAgBoDP,EAAMS,QAAU,YAG3EH,GACDO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,SAbI,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QAYeC,WAAW,EAAMC,OAlBnC,WACvBf,GAAY,GACZP,EAAMuB,aAAad,IAiBJW,MAAOX,2DCMfe,EAHkBC,YAAU,CAACC,KAAK,gBAAhBD,CAhCT,SAAAE,GAAsC,IAAnCC,EAAmCD,EAAnCC,aAAcC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,MAC9C,OAAOjB,EAAAC,EAAAC,cAAA,QAAMgB,SAAUH,GACnBf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBAEHe,GAASjB,EAAAC,EAAAC,cAAA,OAAKiB,UAAWC,IAAMC,kBAC3BJ,GAELjB,EAAAC,EAAAC,cAAA,qBAPG,KAOeoB,YAAY,YAAa,WAAY,GAAIC,KAC3DvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BADJ,IAEMoB,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAAEC,KAAM,cAE3DxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCADJ,IAESoB,YAAY,yBAA0B,4BAA6B,GAAIG,MAGhFzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACCoB,YAAY,WAAY,UAAW,GAAIG,MAE5CzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBADJ,KACsBX,OAAOmC,KAAKV,EAAQW,UAAUC,IAAI,SAAAC,GAChD,OAAO7B,EAAAC,EAAAC,cAAA,OAAK2B,IAAKA,EAAKV,UAAWW,IAAEhD,SAC/BkB,EAAAC,EAAAC,cAAA,SAAI2B,EAAJ,KAAWP,YAAYO,EAAK,YAAcA,EAAK,GAAIN,aCUjEQ,EAAc,SAAAC,GAAwC,IAArChB,EAAqCgB,EAArChB,QAASiB,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,aACrC,OAAOlC,EAAAC,EAAAC,cAAA,WACF+B,GAAWjC,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,UAAQiC,QAASD,GAAjB,SAEJlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBADJ,KACsBc,EAAQoB,UAE9BpC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BADJ,KAC+Bc,EAAQqB,eAAiB,MAAQ,QAG5DrB,EAAQqB,gBACRrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCADJ,KACoCc,EAAQsB,2BAGhDtC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBADJ,IACqBc,EAAQuB,SAE7BvC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBADJ,KACsBX,OAAOmC,KAAKV,EAAQW,UAAUC,IAAI,SAAAC,GAChD,OAAO7B,EAAAC,EAAAC,cAACsC,EAAD,CAASC,aAAcZ,EAAKa,aAAc1B,EAAQW,SAASE,UAM5Ec,EAAU,SAAAC,GAAoC,IAAjCH,EAAiCG,EAAjCH,aAAcC,EAAmBE,EAAnBF,aAC7B,OAAO1C,EAAAC,EAAAC,cAAA,OAAKiB,UAAWW,IAAEhD,SAASkB,EAAAC,EAAAC,cAAA,SAAIuC,GAA/B,KAAmDC,IAG/CG,EAlEK,SAAA/B,GAAwE,IAArEE,EAAqEF,EAArEE,QAASpB,EAA4DkB,EAA5DlB,OAAQc,EAAoDI,EAApDJ,aAAcuB,EAAsCnB,EAAtCmB,QAASa,EAA6BhC,EAA7BgC,UAAWC,EAAkBjC,EAAlBiC,YAAkB3D,EAE1DC,oBAAS,GAFiDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEnFK,EAFmFH,EAAA,GAEzEI,EAFyEJ,EAAA,GAIxF,IAAK0B,EACD,OAAOhB,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,MAcX,OACIhD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKiB,UAAWW,IAAElD,kBACdoB,EAAAC,EAAAC,cAAA,OAAK+C,IAAKjC,EAAQkC,OAAOC,OAASC,IAAWjC,UAAWW,IAAEjD,SACzDoD,GAAWjC,EAAAC,EAAAC,cAAA,SAAOsB,KAAK,OAAOpB,SAff,SAACC,GACrBA,EAAEgD,OAAOC,MAAMC,QACfT,EAAUzC,EAAEgD,OAAOC,MAAM,OAcpB7D,EACKO,EAAAC,EAAAC,cAACsD,EAAD,CAAiBC,cAAezC,EAASA,QAASA,EAASE,SAZ5D,SAACwC,GACdX,EAAYW,GACPC,KACG,kBAAMjE,GAAY,QAUZM,EAAAC,EAAAC,cAAC0D,EAAD,CAAa5C,QAASA,EAASiB,QAASA,EAASC,aAAc,kBAAMxC,GAAY,MAEvFM,EAAAC,EAAAC,cAAC2D,EAAD,CAAwBjE,OAAQA,EAAQc,aAAcA,2DCnBvDoD,EAbF,SAAC3E,GACZ,OACEa,EAAAC,EAAAC,cAAA,OAAKiB,UAAWW,IAAE7C,MAChBe,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,sEACL9D,EAAM4E,QACN/D,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAA,oBADE,IACkBf,EAAM6E,8BCF5BC,EAAcC,YAAiB,IAcjCC,EAAsBvD,YAAU,CAACC,KAAM,yBAAjBD,CAZL,SAACzB,GAClB,OAAOa,EAAAC,EAAAC,cAAA,QAAMgB,SAAU/B,EAAM4B,cACzBf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAW7C,IAAU8C,YAAa,eACrDC,SAAU,CAACC,IAAUR,MAEhCjE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BA8BGwE,EAvBCC,IAAMC,KAAK,SAAAzF,GACvB,IAAI0F,EACAtF,OAAAuF,EAAA,EAAAvF,CAAIJ,EAAMH,OACL+F,UACAnD,IAAI,SAAAoD,GAAC,OAAIhF,EAAAC,EAAAC,cAAC+E,EAAD,CAAMpD,IAAKmD,EAAEE,GAAInB,QAASiB,EAAEjB,QAASC,WAAYgB,EAAEhB,eAEhDW,IAAMQ,YAM3B,OACInF,EAAAC,EAAAC,cAAA,OAAKiB,UAAWW,IAAE/C,YACdiB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACiE,EAAD,CAAqBjD,SAPb,SAACkE,GACbjG,EAAMkG,QAAQD,EAAOE,gBAOjBtF,EAAAC,EAAAC,cAAA,OAAKiB,UAAWW,IAAE9C,OACb6F,cClBFU,EAFUC,YAfD,SAACC,GACrB,MAAO,CACHzG,MAAOyG,EAAMC,YAAY1G,MACzBsG,YAAaG,EAAMC,YAAYJ,cAIZ,SAACK,GACxB,MAAO,CACHN,QAAS,SAACC,GACNK,EAASC,YAAqBN,OAKjBE,CAA6Cd,GCHvDmB,EAbC,SAAC1G,GACb,OACIa,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4F,EAAD,CAAahD,UAAW3D,EAAM2D,UAC1Bb,QAAS9C,EAAM8C,QACfjB,QAAS7B,EAAM6B,QAASpB,OAAQT,EAAMS,OACtCc,aAAcvB,EAAMuB,aACpBqC,YAAa5D,EAAM4D,cACvB/C,EAAAC,EAAAC,cAAC6F,EAAD,wBCLNC,iLAGE,IAAIC,EAASC,KAAK/G,MAAMgH,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAK/G,MAAMkH,mBAEhBH,KAAK/G,MAAMmH,QAAQC,KAAK,UAGhCL,KAAK/G,MAAMqH,eAAeP,GAC1BC,KAAK/G,MAAMsH,UAAUR,+CAGrBC,KAAKQ,4DAGUC,EAAWC,EAAWC,GACjCX,KAAK/G,MAAMgH,MAAMC,OAAOH,SAAWU,EAAUR,MAAMC,OAAOH,QAC1DC,KAAKQ,kDAIT,OACI1G,EAAAC,EAAAC,cAAC4G,EAADvH,OAAAwH,OAAA,GAAab,KAAK/G,MAAlB,CACI8C,SAAUiE,KAAK/G,MAAMgH,MAAMC,OAAOH,OAClCjF,QAASkF,KAAK/G,MAAM6B,QACpBpB,OAAQsG,KAAK/G,MAAMS,OACnBc,aAAcwF,KAAK/G,MAAMuB,aACzBoC,UAAWoD,KAAK/G,MAAM2D,UACtBC,YAAamD,KAAK/G,MAAM4D,sBA9BT4B,IAAMqC,WA6CtBC,sBACXzB,YAVkB,SAACC,GACnB,MAAQ,CACJzE,QAASyE,EAAMC,YAAY1E,QAC3BpB,OAAQ6F,EAAMC,YAAY9F,OAC1ByG,iBAAkBZ,EAAMyB,KAAKjB,OAC7BkB,OAAQ1B,EAAMyB,KAAKC,SAKE,CAAEX,mBAAgBC,cAAW/F,iBAAcoC,cAAWC,kBAC/EqE,IAFWH,CAGbjB","file":"static/js/3.4be99a3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3FXfR\",\"avatar\":\"ProfileInfo_avatar__1H8pi\",\"contact\":\"ProfileInfo_contact__10v44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3hejl\",\"posts\":\"MyPosts_posts__1xp6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3dLGf\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status:</b><span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <b>Fullname</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        < div >\r\n            <b>Looking for a job</b>:\r\n             {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>My proffesional skills</b>:\r\n                {createField(\"My proffesional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form:\"edit-profile\"})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataFormReduxForm\r\n\r\n","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(\r\n                () => setEditMode(false)\r\n            )\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.avatar} />\r\n                {isOwner && <input type='file' onChange={onMainPhotoSelected} />}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Fullname</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"nope\"}\r\n        </div>\r\n        {\r\n            profile.lookingForAJob &&\r\n            <div>\r\n                <b>My proffesional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://avatarko.ru/img/kartinka/2/zhivotnye_kot_galstuk_1881.jpg\" />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile} status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                saveProfile={props.saveProfile} />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}